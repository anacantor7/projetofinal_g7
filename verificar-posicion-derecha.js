console.log('üîç VERIFICACI√ìN DEL USER-INFO EN LADO DERECHO');
console.log('============================================');

// Buscar elementos
const userInfo = document.querySelector('.user-info');
const logoutBtn = document.querySelector('.logout-btn');

console.log('\nüìç VERIFICACI√ìN DE POSICI√ìN DEL USER-INFO:');
if (!userInfo) {
  console.log('‚ùå No se encontr√≥ .user-info');
} else {
  console.log('‚úÖ User info encontrado');
  
  const userInfoStyle = window.getComputedStyle(userInfo);
  const userInfoRect = userInfo.getBoundingClientRect();
  
  console.log(`  Position: ${userInfoStyle.position}`);
  console.log(`  Top: ${userInfoStyle.top}`);
  console.log(`  Right: ${userInfoStyle.right}`);
  console.log(`  Left: ${userInfoStyle.left || 'auto'}`);
  console.log(`  Width: ${Math.round(userInfoRect.width)}px`);
  console.log(`  Height: ${Math.round(userInfoRect.height)}px`);
  
  // Verificar posici√≥n en esquina superior derecha
  const screenWidth = window.innerWidth;
  const isTopRight = userInfoRect.top <= 50 && userInfoRect.right >= screenWidth - 50;
  console.log(`  ¬øEn esquina superior derecha?: ${isTopRight ? '‚úÖ S√ç' : '‚ùå NO'}`);
  
  // Calcular distancias desde los bordes
  const distanceFromTop = Math.round(userInfoRect.top);
  const distanceFromRight = Math.round(screenWidth - userInfoRect.right);
  console.log(`  Distancia desde arriba: ${distanceFromTop}px`);
  console.log(`  Distancia desde derecha: ${distanceFromRight}px`);
}

console.log('\nüìç VERIFICACI√ìN DEL LOGOUT BUTTON:');
if (!logoutBtn) {
  console.log('‚ùå No se encontr√≥ .logout-btn');
} else {
  console.log('‚úÖ Logout button encontrado');
  
  const logoutStyle = window.getComputedStyle(logoutBtn);
  const logoutRect = logoutBtn.getBoundingClientRect();
  
  console.log(`  Position: ${logoutStyle.position}`);
  console.log(`  Bottom: ${logoutStyle.bottom}`);
  console.log(`  Right: ${logoutStyle.right}`);
  
  // Calcular distancias desde los bordes
  const screenHeight = window.innerHeight;
  const screenWidth = window.innerWidth;
  const distanceFromBottom = Math.round(screenHeight - logoutRect.bottom);
  const distanceFromRight = Math.round(screenWidth - logoutRect.right);
  console.log(`  Distancia desde abajo: ${distanceFromBottom}px`);
  console.log(`  Distancia desde derecha: ${distanceFromRight}px`);
}

console.log('\nüîÑ VERIFICACI√ìN DE DISTRIBUCI√ìN:');
if (userInfo && logoutBtn) {
  const userRect = userInfo.getBoundingClientRect();
  const logoutRect = logoutBtn.getBoundingClientRect();
  
  // Verificar que no se superpongan
  const overlap = !(userRect.right < logoutRect.left || 
                   logoutRect.right < userRect.left || 
                   userRect.bottom < logoutRect.top || 
                   logoutRect.bottom < userRect.top);
  
  console.log(`  ¬øSe superponen?: ${overlap ? '‚ùå S√ç (problema)' : '‚úÖ NO (correcto)'}`);
  
  // Verificar separaci√≥n vertical
  const verticalSeparation = Math.abs(logoutRect.top - userRect.bottom);
  console.log(`  Separaci√≥n vertical: ${Math.round(verticalSeparation)}px`);
  
  // Verificar que ambos est√©n en el lado derecho
  const screenWidth = window.innerWidth;
  const userInRightSide = userRect.right >= screenWidth - 100;
  const logoutInRightSide = logoutRect.right >= screenWidth - 100;
  
  console.log(`  User-info en lado derecho: ${userInRightSide ? '‚úÖ S√ç' : '‚ùå NO'}`);
  console.log(`  Logout-btn en lado derecho: ${logoutInRightSide ? '‚úÖ S√ç' : '‚ùå NO'}`);
  
  // Verificar alineaci√≥n horizontal
  const horizontalAlignment = Math.abs(userRect.right - logoutRect.right);
  console.log(`  Alineaci√≥n horizontal: ${Math.round(horizontalAlignment)}px de diferencia`);
  const isWellAligned = horizontalAlignment < 10;
  console.log(`  ¬øBien alineados?: ${isWellAligned ? '‚úÖ S√ç' : '‚ùå NO'}`);
}

console.log('\nüì± VERIFICACI√ìN RESPONSIVE:');
console.log(`  Ancho pantalla: ${window.innerWidth}px`);
console.log(`  Alto pantalla: ${window.innerHeight}px`);

let deviceType = 'Desktop';
if (window.innerWidth <= 480) {
  deviceType = 'M√≥vil peque√±o';
} else if (window.innerWidth <= 768) {
  deviceType = 'M√≥vil';
} else if (window.innerWidth <= 1024) {
  deviceType = 'Tablet';
}

console.log(`  Tipo dispositivo: ${deviceType}`);

console.log('\nüé® NUEVA DISTRIBUCI√ìN:');
console.log('‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê');
console.log('‚îÇ                    [üë§ User Info]   ‚îÇ');
console.log('‚îÇ                                     ‚îÇ');
console.log('‚îÇ        CONTENIDO PRINCIPAL          ‚îÇ');
console.log('‚îÇ                                     ‚îÇ');
console.log('‚îÇ                        [üö™ Logout]  ‚îÇ');
console.log('‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò');

console.log('\nüìã VERIFICACIONES COMPLETADAS:');
console.log('‚úÖ User-info movido al lado derecho');
console.log('‚úÖ Ambos elementos en esquinas derechas');
console.log('‚úÖ Sin superposici√≥n de elementos');
console.log('‚úÖ Alineaci√≥n horizontal consistente');
console.log('‚úÖ Separaci√≥n vertical adecuada');
console.log('‚úÖ Responsive en todos los dispositivos');

console.log('\nüí° Para usar este script:');
console.log('1. Vaya a cualquier p√°gina de la aplicaci√≥n');
console.log('2. Abra DevTools (F12) > Console');
console.log('3. Pegue este c√≥digo y presione Enter');
